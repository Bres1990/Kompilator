

****** BLOK DEKLARACJI ZMIENNYCH ******


	Deklaracja zmiennej <a>
	Udana deklaracja zmiennej
	Zmienna przypisana do rejestru 1
	Deklaracja zmiennej <b>
	Udana deklaracja zmiennej
	Zmienna przypisana do rejestru 2


****** BLOK KOMENDY ******


Generuje wartosc 0
	Przypisuje zmiennej <a> wartosc <0>
Indeks zmiennej to 0
	Udane przypisanie do zmiennej
Generuje wartosc 0
	Przypisuje zmiennej <b> wartosc <0>
Indeks zmiennej to 1
	Udane przypisanie do zmiennej
Generuje if w linii 6
Operacja boolowska a == b
TEST JUMPERA
Tymczasowy jumper w linii 13


****** BLOK KOMENDY ******


Generuje wartosc 0
	Przypisuje zmiennej <a> wartosc <0>
Indeks zmiennej to 0
	Udane przypisanie do zmiennej
Warunki then ...
Generuje then w linii 17
TEST JUMPERA
Tymczasowy jumper w linii 17
Tymczasowy label w linii 18


****** BLOK KOMENDY ******


Generuje wartosc 1
	Przypisuje zmiennej <a> wartosc <1>
Indeks zmiennej to 0
	Udane przypisanie do zmiennej
Generuje else w linii 23
Tymczasowy label w linii 23
ELSE!
Koniec programu, zwracam HALT


******** KOD ********


0. ZERO 3	 ** binaryNumberToCode: 0 **
1. COPY 3	 ** copy 0 to register 0 **
2. STORE 0 	** // umieszczam a w komorce pamieci 0 // **
3. ZERO 3	 ** binaryNumberToCode: 0 **
4. COPY 3	 ** copy 0 to register 0 **
5. STORE 1 	** // umieszczam b w komorce pamieci 0 // **
6. LOAD 1 	** Pobieram zmienna (a) z komorki pamieci 0 do rejestru 1 **
7. LOAD 2 	** Pobieram zmienna (b) z komorki pamieci 0 do rejestru 2 **
8. STORE 5 	** ==	  p_r0 <- reg_b **
9. SUB 1 	** ==	 r_1 <- r_1 - p_0
10. STORE -1 	** ==	  p_r0 <- reg_i **
11. LOAD 1 	** ==	  reg_i <- p_r0 **
12. SUB 5 	** ==	 r_i <- r_i - p_r0
13. ADD -1 	** ==	 r_i < r_i + p_r0
14. ZERO 4	 ** binaryNumberToCode: 0 **
15. COPY 4	 ** copy 0 to register 0 **
16. STORE 0 	** // umieszczam a w komorce pamieci 0 // **
17. JUMP
18. ---ETYKIETA---

19. ZERO 4	 ** binaryNumberToCode: 1 **
20. INC 4
21. COPY 4	 ** copy 1 to register 0 **
22. STORE 0 	** // umieszczam a w komorce pamieci 1 // **
23. ---ETYKIETA---

24. HALT
