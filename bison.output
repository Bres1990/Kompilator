Nieużywane symbole terminalne w gramatyce

   LCOMMENT
   RCOMMENT
   IDENTIFIER


Bezużyteczne reguły w analizatorze z powodu konfliktów

   22 $@9: %empty


Stan 24 konflikty: 1 redukcja/redukcja


Gramatyka

    0 $accept: program $end

    1 program: %empty
    2        | VAR vdeclarations START commands END

    3 vdeclarations: vdeclarations PIDENTIFIER
    4              | vdeclarations PIDENTIFIER LBRACKET NUM RBRACKET
    5              | %empty

    6 commands: commands command
    7         | %empty

    8 command: PIDENTIFIER LBRACKET PIDENTIFIER RBRACKET ASSIGN expression SEMICOLON
    9        | PIDENTIFIER LBRACKET NUM RBRACKET ASSIGN expression SEMICOLON
   10        | PIDENTIFIER ASSIGN expression SEMICOLON

   11 $@1: %empty

   12 $@2: %empty

   13 $@3: %empty

   14 command: IF condition $@1 THEN commands $@2 ELSE commands $@3 ENDIF

   15 $@4: %empty

   16 $@5: %empty

   17 command: WHILE condition $@4 DO commands $@5 ENDWHILE

   18 $@6: %empty

   19 $@7: %empty

   20 $@8: %empty

   21 command: FOR PIDENTIFIER $@6 FROM VALUE DOWNTO VALUE $@7 DO commands $@8 ENDFOR

   22 $@9: %empty

   23 $@10: %empty

   24 $@11: %empty

   25 command: FOR PIDENTIFIER $@9 FROM VALUE TO VALUE $@10 DO commands $@11 ENDFOR
   26        | READ PIDENTIFIER LBRACKET PIDENTIFIER RBRACKET SEMICOLON
   27        | READ PIDENTIFIER LBRACKET NUM RBRACKET SEMICOLON
   28        | READ PIDENTIFIER SEMICOLON
   29        | WRITE VALUE SEMICOLON
   30        | SKIP SEMICOLON

   31 expression: VALUE
   32           | VALUE PLUS VALUE
   33           | VALUE MINUS VALUE
   34           | VALUE MULT VALUE
   35           | VALUE DIV VALUE
   36           | VALUE MOD VALUE

   37 condition: VALUE
   38          | VALUE EQ VALUE
   39          | VALUE NEQ VALUE
   40          | VALUE LT VALUE
   41          | VALUE GT VALUE
   42          | VALUE GET VALUE
   43          | VALUE LET VALUE

   44 VALUE: NUM
   45      | PIDENTIFIER LBRACKET PIDENTIFIER RBRACKET
   46      | PIDENTIFIER LBRACKET NUM RBRACKET
   47      | PIDENTIFIER


Symbole terminalne i reguły, w których występują

$end (0) 0
error (256)
VAR (258) 2
START (259) 2
END (260) 2
LBRACKET (261) 4 8 9 26 27 45 46
RBRACKET (262) 4 8 9 26 27 45 46
LCOMMENT (263)
RCOMMENT (264)
IF (265) 14
THEN (266) 14
ELSE (267) 14
ENDIF (268) 14
WHILE (269) 17
DO (270) 17 21 25
ENDWHILE (271) 17
FOR (272) 21 25
FROM (273) 21 25
DOWNTO (274) 21
TO (275) 25
ENDFOR (276) 21 25
READ (277) 26 27 28
WRITE (278) 29
SKIP (279) 30
ASSIGN (280) 8 9 10
PLUS (281) 32
MINUS (282) 33
MULT (283) 34
DIV (284) 35
MOD (285) 36
EQ (286) 38
LT (287) 40
LET (288) 43
GT (289) 41
GET (290) 42
NEQ (291) 39
NUM (292) 4 9 27 44 46
PIDENTIFIER (293) 3 4 8 9 10 21 25 26 27 28 45 46 47
IDENTIFIER (294)
SEMICOLON (295) 8 9 10 26 27 28 29 30


Symbole nieterminalne i reguły, w których występują

$accept (41)
    po lewej: 0
program (42)
    po lewej: 1 2, po prawej: 0
vdeclarations (43)
    po lewej: 3 4 5, po prawej: 2 3 4
commands (44)
    po lewej: 6 7, po prawej: 2 6 14 17 21 25
command (45)
    po lewej: 8 9 10 14 17 21 25 26 27 28 29 30, po prawej: 6
$@1 (46)
    po lewej: 11, po prawej: 14
$@2 (47)
    po lewej: 12, po prawej: 14
$@3 (48)
    po lewej: 13, po prawej: 14
$@4 (49)
    po lewej: 15, po prawej: 17
$@5 (50)
    po lewej: 16, po prawej: 17
$@6 (51)
    po lewej: 18, po prawej: 21
$@7 (52)
    po lewej: 19, po prawej: 21
$@8 (53)
    po lewej: 20, po prawej: 21
$@9 (54)
    po lewej: 22, po prawej: 25
$@10 (55)
    po lewej: 23, po prawej: 25
$@11 (56)
    po lewej: 24, po prawej: 25
expression (57)
    po lewej: 31 32 33 34 35 36, po prawej: 8 9 10
condition (58)
    po lewej: 37 38 39 40 41 42 43, po prawej: 14 17
VALUE (59)
    po lewej: 44 45 46 47, po prawej: 21 25 29 31 32 33 34 35 36 37
    38 39 40 41 42 43


Stan 0

    0 $accept: . program $end

    VAR  przesunięcie, i przejście do stanu 1

    $domyślnie  redukcja przy użyciu reguły 1 (program)

    program  przejście do stanu 2


Stan 1

    2 program: VAR . vdeclarations START commands END

    $domyślnie  redukcja przy użyciu reguły 5 (vdeclarations)

    vdeclarations  przejście do stanu 3


Stan 2

    0 $accept: program . $end

    $end  przesunięcie, i przejście do stanu 4


Stan 3

    2 program: VAR vdeclarations . START commands END
    3 vdeclarations: vdeclarations . PIDENTIFIER
    4              | vdeclarations . PIDENTIFIER LBRACKET NUM RBRACKET

    START        przesunięcie, i przejście do stanu 5
    PIDENTIFIER  przesunięcie, i przejście do stanu 6


Stan 4

    0 $accept: program $end .

    $domyślnie  akceptowanie


Stan 5

    2 program: VAR vdeclarations START . commands END

    $domyślnie  redukcja przy użyciu reguły 7 (commands)

    commands  przejście do stanu 7


Stan 6

    3 vdeclarations: vdeclarations PIDENTIFIER .
    4              | vdeclarations PIDENTIFIER . LBRACKET NUM RBRACKET

    LBRACKET  przesunięcie, i przejście do stanu 8

    $domyślnie  redukcja przy użyciu reguły 3 (vdeclarations)


Stan 7

    2 program: VAR vdeclarations START commands . END
    6 commands: commands . command

    END          przesunięcie, i przejście do stanu 9
    IF           przesunięcie, i przejście do stanu 10
    WHILE        przesunięcie, i przejście do stanu 11
    FOR          przesunięcie, i przejście do stanu 12
    READ         przesunięcie, i przejście do stanu 13
    WRITE        przesunięcie, i przejście do stanu 14
    SKIP         przesunięcie, i przejście do stanu 15
    PIDENTIFIER  przesunięcie, i przejście do stanu 16

    command  przejście do stanu 17


Stan 8

    4 vdeclarations: vdeclarations PIDENTIFIER LBRACKET . NUM RBRACKET

    NUM  przesunięcie, i przejście do stanu 18


Stan 9

    2 program: VAR vdeclarations START commands END .

    $domyślnie  redukcja przy użyciu reguły 2 (program)


Stan 10

   14 command: IF . condition $@1 THEN commands $@2 ELSE commands $@3 ENDIF

    NUM          przesunięcie, i przejście do stanu 19
    PIDENTIFIER  przesunięcie, i przejście do stanu 20

    condition  przejście do stanu 21
    VALUE      przejście do stanu 22


Stan 11

   17 command: WHILE . condition $@4 DO commands $@5 ENDWHILE

    NUM          przesunięcie, i przejście do stanu 19
    PIDENTIFIER  przesunięcie, i przejście do stanu 20

    condition  przejście do stanu 23
    VALUE      przejście do stanu 22


Stan 12

   21 command: FOR . PIDENTIFIER $@6 FROM VALUE DOWNTO VALUE $@7 DO commands $@8 ENDFOR
   25        | FOR . PIDENTIFIER $@9 FROM VALUE TO VALUE $@10 DO commands $@11 ENDFOR

    PIDENTIFIER  przesunięcie, i przejście do stanu 24


Stan 13

   26 command: READ . PIDENTIFIER LBRACKET PIDENTIFIER RBRACKET SEMICOLON
   27        | READ . PIDENTIFIER LBRACKET NUM RBRACKET SEMICOLON
   28        | READ . PIDENTIFIER SEMICOLON

    PIDENTIFIER  przesunięcie, i przejście do stanu 25


Stan 14

   29 command: WRITE . VALUE SEMICOLON

    NUM          przesunięcie, i przejście do stanu 19
    PIDENTIFIER  przesunięcie, i przejście do stanu 20

    VALUE  przejście do stanu 26


Stan 15

   30 command: SKIP . SEMICOLON

    SEMICOLON  przesunięcie, i przejście do stanu 27


Stan 16

    8 command: PIDENTIFIER . LBRACKET PIDENTIFIER RBRACKET ASSIGN expression SEMICOLON
    9        | PIDENTIFIER . LBRACKET NUM RBRACKET ASSIGN expression SEMICOLON
   10        | PIDENTIFIER . ASSIGN expression SEMICOLON

    LBRACKET  przesunięcie, i przejście do stanu 28
    ASSIGN    przesunięcie, i przejście do stanu 29


Stan 17

    6 commands: commands command .

    $domyślnie  redukcja przy użyciu reguły 6 (commands)


Stan 18

    4 vdeclarations: vdeclarations PIDENTIFIER LBRACKET NUM . RBRACKET

    RBRACKET  przesunięcie, i przejście do stanu 30


Stan 19

   44 VALUE: NUM .

    $domyślnie  redukcja przy użyciu reguły 44 (VALUE)


Stan 20

   45 VALUE: PIDENTIFIER . LBRACKET PIDENTIFIER RBRACKET
   46      | PIDENTIFIER . LBRACKET NUM RBRACKET
   47      | PIDENTIFIER .

    LBRACKET  przesunięcie, i przejście do stanu 31

    $domyślnie  redukcja przy użyciu reguły 47 (VALUE)


Stan 21

   14 command: IF condition . $@1 THEN commands $@2 ELSE commands $@3 ENDIF

    $domyślnie  redukcja przy użyciu reguły 11 ($@1)

    $@1  przejście do stanu 32


Stan 22

   37 condition: VALUE .
   38          | VALUE . EQ VALUE
   39          | VALUE . NEQ VALUE
   40          | VALUE . LT VALUE
   41          | VALUE . GT VALUE
   42          | VALUE . GET VALUE
   43          | VALUE . LET VALUE

    EQ   przesunięcie, i przejście do stanu 33
    LT   przesunięcie, i przejście do stanu 34
    LET  przesunięcie, i przejście do stanu 35
    GT   przesunięcie, i przejście do stanu 36
    GET  przesunięcie, i przejście do stanu 37
    NEQ  przesunięcie, i przejście do stanu 38

    $domyślnie  redukcja przy użyciu reguły 37 (condition)


Stan 23

   17 command: WHILE condition . $@4 DO commands $@5 ENDWHILE

    $domyślnie  redukcja przy użyciu reguły 15 ($@4)

    $@4  przejście do stanu 39


Stan 24

   21 command: FOR PIDENTIFIER . $@6 FROM VALUE DOWNTO VALUE $@7 DO commands $@8 ENDFOR
   25        | FOR PIDENTIFIER . $@9 FROM VALUE TO VALUE $@10 DO commands $@11 ENDFOR

    FROM         redukcja przy użyciu reguły 18 ($@6)
    FROM         [redukcja przy użyciu reguły 22 ($@9)]
    $domyślnie  redukcja przy użyciu reguły 18 ($@6)

    $@6  przejście do stanu 40
    $@9  przejście do stanu 41


Stan 25

   26 command: READ PIDENTIFIER . LBRACKET PIDENTIFIER RBRACKET SEMICOLON
   27        | READ PIDENTIFIER . LBRACKET NUM RBRACKET SEMICOLON
   28        | READ PIDENTIFIER . SEMICOLON

    LBRACKET   przesunięcie, i przejście do stanu 42
    SEMICOLON  przesunięcie, i przejście do stanu 43


Stan 26

   29 command: WRITE VALUE . SEMICOLON

    SEMICOLON  przesunięcie, i przejście do stanu 44


Stan 27

   30 command: SKIP SEMICOLON .

    $domyślnie  redukcja przy użyciu reguły 30 (command)


Stan 28

    8 command: PIDENTIFIER LBRACKET . PIDENTIFIER RBRACKET ASSIGN expression SEMICOLON
    9        | PIDENTIFIER LBRACKET . NUM RBRACKET ASSIGN expression SEMICOLON

    NUM          przesunięcie, i przejście do stanu 45
    PIDENTIFIER  przesunięcie, i przejście do stanu 46


Stan 29

   10 command: PIDENTIFIER ASSIGN . expression SEMICOLON

    NUM          przesunięcie, i przejście do stanu 19
    PIDENTIFIER  przesunięcie, i przejście do stanu 20

    expression  przejście do stanu 47
    VALUE       przejście do stanu 48


Stan 30

    4 vdeclarations: vdeclarations PIDENTIFIER LBRACKET NUM RBRACKET .

    $domyślnie  redukcja przy użyciu reguły 4 (vdeclarations)


Stan 31

   45 VALUE: PIDENTIFIER LBRACKET . PIDENTIFIER RBRACKET
   46      | PIDENTIFIER LBRACKET . NUM RBRACKET

    NUM          przesunięcie, i przejście do stanu 49
    PIDENTIFIER  przesunięcie, i przejście do stanu 50


Stan 32

   14 command: IF condition $@1 . THEN commands $@2 ELSE commands $@3 ENDIF

    THEN  przesunięcie, i przejście do stanu 51


Stan 33

   38 condition: VALUE EQ . VALUE

    NUM          przesunięcie, i przejście do stanu 19
    PIDENTIFIER  przesunięcie, i przejście do stanu 20

    VALUE  przejście do stanu 52


Stan 34

   40 condition: VALUE LT . VALUE

    NUM          przesunięcie, i przejście do stanu 19
    PIDENTIFIER  przesunięcie, i przejście do stanu 20

    VALUE  przejście do stanu 53


Stan 35

   43 condition: VALUE LET . VALUE

    NUM          przesunięcie, i przejście do stanu 19
    PIDENTIFIER  przesunięcie, i przejście do stanu 20

    VALUE  przejście do stanu 54


Stan 36

   41 condition: VALUE GT . VALUE

    NUM          przesunięcie, i przejście do stanu 19
    PIDENTIFIER  przesunięcie, i przejście do stanu 20

    VALUE  przejście do stanu 55


Stan 37

   42 condition: VALUE GET . VALUE

    NUM          przesunięcie, i przejście do stanu 19
    PIDENTIFIER  przesunięcie, i przejście do stanu 20

    VALUE  przejście do stanu 56


Stan 38

   39 condition: VALUE NEQ . VALUE

    NUM          przesunięcie, i przejście do stanu 19
    PIDENTIFIER  przesunięcie, i przejście do stanu 20

    VALUE  przejście do stanu 57


Stan 39

   17 command: WHILE condition $@4 . DO commands $@5 ENDWHILE

    DO  przesunięcie, i przejście do stanu 58


Stan 40

   21 command: FOR PIDENTIFIER $@6 . FROM VALUE DOWNTO VALUE $@7 DO commands $@8 ENDFOR

    FROM  przesunięcie, i przejście do stanu 59


Stan 41

   25 command: FOR PIDENTIFIER $@9 . FROM VALUE TO VALUE $@10 DO commands $@11 ENDFOR

    FROM  przesunięcie, i przejście do stanu 60


Stan 42

   26 command: READ PIDENTIFIER LBRACKET . PIDENTIFIER RBRACKET SEMICOLON
   27        | READ PIDENTIFIER LBRACKET . NUM RBRACKET SEMICOLON

    NUM          przesunięcie, i przejście do stanu 61
    PIDENTIFIER  przesunięcie, i przejście do stanu 62


Stan 43

   28 command: READ PIDENTIFIER SEMICOLON .

    $domyślnie  redukcja przy użyciu reguły 28 (command)


Stan 44

   29 command: WRITE VALUE SEMICOLON .

    $domyślnie  redukcja przy użyciu reguły 29 (command)


Stan 45

    9 command: PIDENTIFIER LBRACKET NUM . RBRACKET ASSIGN expression SEMICOLON

    RBRACKET  przesunięcie, i przejście do stanu 63


Stan 46

    8 command: PIDENTIFIER LBRACKET PIDENTIFIER . RBRACKET ASSIGN expression SEMICOLON

    RBRACKET  przesunięcie, i przejście do stanu 64


Stan 47

   10 command: PIDENTIFIER ASSIGN expression . SEMICOLON

    SEMICOLON  przesunięcie, i przejście do stanu 65


Stan 48

   31 expression: VALUE .
   32           | VALUE . PLUS VALUE
   33           | VALUE . MINUS VALUE
   34           | VALUE . MULT VALUE
   35           | VALUE . DIV VALUE
   36           | VALUE . MOD VALUE

    PLUS   przesunięcie, i przejście do stanu 66
    MINUS  przesunięcie, i przejście do stanu 67
    MULT   przesunięcie, i przejście do stanu 68
    DIV    przesunięcie, i przejście do stanu 69
    MOD    przesunięcie, i przejście do stanu 70

    $domyślnie  redukcja przy użyciu reguły 31 (expression)


Stan 49

   46 VALUE: PIDENTIFIER LBRACKET NUM . RBRACKET

    RBRACKET  przesunięcie, i przejście do stanu 71


Stan 50

   45 VALUE: PIDENTIFIER LBRACKET PIDENTIFIER . RBRACKET

    RBRACKET  przesunięcie, i przejście do stanu 72


Stan 51

   14 command: IF condition $@1 THEN . commands $@2 ELSE commands $@3 ENDIF

    $domyślnie  redukcja przy użyciu reguły 7 (commands)

    commands  przejście do stanu 73


Stan 52

   38 condition: VALUE EQ VALUE .

    $domyślnie  redukcja przy użyciu reguły 38 (condition)


Stan 53

   40 condition: VALUE LT VALUE .

    $domyślnie  redukcja przy użyciu reguły 40 (condition)


Stan 54

   43 condition: VALUE LET VALUE .

    $domyślnie  redukcja przy użyciu reguły 43 (condition)


Stan 55

   41 condition: VALUE GT VALUE .

    $domyślnie  redukcja przy użyciu reguły 41 (condition)


Stan 56

   42 condition: VALUE GET VALUE .

    $domyślnie  redukcja przy użyciu reguły 42 (condition)


Stan 57

   39 condition: VALUE NEQ VALUE .

    $domyślnie  redukcja przy użyciu reguły 39 (condition)


Stan 58

   17 command: WHILE condition $@4 DO . commands $@5 ENDWHILE

    $domyślnie  redukcja przy użyciu reguły 7 (commands)

    commands  przejście do stanu 74


Stan 59

   21 command: FOR PIDENTIFIER $@6 FROM . VALUE DOWNTO VALUE $@7 DO commands $@8 ENDFOR

    NUM          przesunięcie, i przejście do stanu 19
    PIDENTIFIER  przesunięcie, i przejście do stanu 20

    VALUE  przejście do stanu 75


Stan 60

   25 command: FOR PIDENTIFIER $@9 FROM . VALUE TO VALUE $@10 DO commands $@11 ENDFOR

    NUM          przesunięcie, i przejście do stanu 19
    PIDENTIFIER  przesunięcie, i przejście do stanu 20

    VALUE  przejście do stanu 76


Stan 61

   27 command: READ PIDENTIFIER LBRACKET NUM . RBRACKET SEMICOLON

    RBRACKET  przesunięcie, i przejście do stanu 77


Stan 62

   26 command: READ PIDENTIFIER LBRACKET PIDENTIFIER . RBRACKET SEMICOLON

    RBRACKET  przesunięcie, i przejście do stanu 78


Stan 63

    9 command: PIDENTIFIER LBRACKET NUM RBRACKET . ASSIGN expression SEMICOLON

    ASSIGN  przesunięcie, i przejście do stanu 79


Stan 64

    8 command: PIDENTIFIER LBRACKET PIDENTIFIER RBRACKET . ASSIGN expression SEMICOLON

    ASSIGN  przesunięcie, i przejście do stanu 80


Stan 65

   10 command: PIDENTIFIER ASSIGN expression SEMICOLON .

    $domyślnie  redukcja przy użyciu reguły 10 (command)


Stan 66

   32 expression: VALUE PLUS . VALUE

    NUM          przesunięcie, i przejście do stanu 19
    PIDENTIFIER  przesunięcie, i przejście do stanu 20

    VALUE  przejście do stanu 81


Stan 67

   33 expression: VALUE MINUS . VALUE

    NUM          przesunięcie, i przejście do stanu 19
    PIDENTIFIER  przesunięcie, i przejście do stanu 20

    VALUE  przejście do stanu 82


Stan 68

   34 expression: VALUE MULT . VALUE

    NUM          przesunięcie, i przejście do stanu 19
    PIDENTIFIER  przesunięcie, i przejście do stanu 20

    VALUE  przejście do stanu 83


Stan 69

   35 expression: VALUE DIV . VALUE

    NUM          przesunięcie, i przejście do stanu 19
    PIDENTIFIER  przesunięcie, i przejście do stanu 20

    VALUE  przejście do stanu 84


Stan 70

   36 expression: VALUE MOD . VALUE

    NUM          przesunięcie, i przejście do stanu 19
    PIDENTIFIER  przesunięcie, i przejście do stanu 20

    VALUE  przejście do stanu 85


Stan 71

   46 VALUE: PIDENTIFIER LBRACKET NUM RBRACKET .

    $domyślnie  redukcja przy użyciu reguły 46 (VALUE)


Stan 72

   45 VALUE: PIDENTIFIER LBRACKET PIDENTIFIER RBRACKET .

    $domyślnie  redukcja przy użyciu reguły 45 (VALUE)


Stan 73

    6 commands: commands . command
   14 command: IF condition $@1 THEN commands . $@2 ELSE commands $@3 ENDIF

    IF           przesunięcie, i przejście do stanu 10
    WHILE        przesunięcie, i przejście do stanu 11
    FOR          przesunięcie, i przejście do stanu 12
    READ         przesunięcie, i przejście do stanu 13
    WRITE        przesunięcie, i przejście do stanu 14
    SKIP         przesunięcie, i przejście do stanu 15
    PIDENTIFIER  przesunięcie, i przejście do stanu 16

    $domyślnie  redukcja przy użyciu reguły 12 ($@2)

    command  przejście do stanu 17
    $@2      przejście do stanu 86


Stan 74

    6 commands: commands . command
   17 command: WHILE condition $@4 DO commands . $@5 ENDWHILE

    IF           przesunięcie, i przejście do stanu 10
    WHILE        przesunięcie, i przejście do stanu 11
    FOR          przesunięcie, i przejście do stanu 12
    READ         przesunięcie, i przejście do stanu 13
    WRITE        przesunięcie, i przejście do stanu 14
    SKIP         przesunięcie, i przejście do stanu 15
    PIDENTIFIER  przesunięcie, i przejście do stanu 16

    $domyślnie  redukcja przy użyciu reguły 16 ($@5)

    command  przejście do stanu 17
    $@5      przejście do stanu 87


Stan 75

   21 command: FOR PIDENTIFIER $@6 FROM VALUE . DOWNTO VALUE $@7 DO commands $@8 ENDFOR

    DOWNTO  przesunięcie, i przejście do stanu 88


Stan 76

   25 command: FOR PIDENTIFIER $@9 FROM VALUE . TO VALUE $@10 DO commands $@11 ENDFOR

    TO  przesunięcie, i przejście do stanu 89


Stan 77

   27 command: READ PIDENTIFIER LBRACKET NUM RBRACKET . SEMICOLON

    SEMICOLON  przesunięcie, i przejście do stanu 90


Stan 78

   26 command: READ PIDENTIFIER LBRACKET PIDENTIFIER RBRACKET . SEMICOLON

    SEMICOLON  przesunięcie, i przejście do stanu 91


Stan 79

    9 command: PIDENTIFIER LBRACKET NUM RBRACKET ASSIGN . expression SEMICOLON

    NUM          przesunięcie, i przejście do stanu 19
    PIDENTIFIER  przesunięcie, i przejście do stanu 20

    expression  przejście do stanu 92
    VALUE       przejście do stanu 48


Stan 80

    8 command: PIDENTIFIER LBRACKET PIDENTIFIER RBRACKET ASSIGN . expression SEMICOLON

    NUM          przesunięcie, i przejście do stanu 19
    PIDENTIFIER  przesunięcie, i przejście do stanu 20

    expression  przejście do stanu 93
    VALUE       przejście do stanu 48


Stan 81

   32 expression: VALUE PLUS VALUE .

    $domyślnie  redukcja przy użyciu reguły 32 (expression)


Stan 82

   33 expression: VALUE MINUS VALUE .

    $domyślnie  redukcja przy użyciu reguły 33 (expression)


Stan 83

   34 expression: VALUE MULT VALUE .

    $domyślnie  redukcja przy użyciu reguły 34 (expression)


Stan 84

   35 expression: VALUE DIV VALUE .

    $domyślnie  redukcja przy użyciu reguły 35 (expression)


Stan 85

   36 expression: VALUE MOD VALUE .

    $domyślnie  redukcja przy użyciu reguły 36 (expression)


Stan 86

   14 command: IF condition $@1 THEN commands $@2 . ELSE commands $@3 ENDIF

    ELSE  przesunięcie, i przejście do stanu 94


Stan 87

   17 command: WHILE condition $@4 DO commands $@5 . ENDWHILE

    ENDWHILE  przesunięcie, i przejście do stanu 95


Stan 88

   21 command: FOR PIDENTIFIER $@6 FROM VALUE DOWNTO . VALUE $@7 DO commands $@8 ENDFOR

    NUM          przesunięcie, i przejście do stanu 19
    PIDENTIFIER  przesunięcie, i przejście do stanu 20

    VALUE  przejście do stanu 96


Stan 89

   25 command: FOR PIDENTIFIER $@9 FROM VALUE TO . VALUE $@10 DO commands $@11 ENDFOR

    NUM          przesunięcie, i przejście do stanu 19
    PIDENTIFIER  przesunięcie, i przejście do stanu 20

    VALUE  przejście do stanu 97


Stan 90

   27 command: READ PIDENTIFIER LBRACKET NUM RBRACKET SEMICOLON .

    $domyślnie  redukcja przy użyciu reguły 27 (command)


Stan 91

   26 command: READ PIDENTIFIER LBRACKET PIDENTIFIER RBRACKET SEMICOLON .

    $domyślnie  redukcja przy użyciu reguły 26 (command)


Stan 92

    9 command: PIDENTIFIER LBRACKET NUM RBRACKET ASSIGN expression . SEMICOLON

    SEMICOLON  przesunięcie, i przejście do stanu 98


Stan 93

    8 command: PIDENTIFIER LBRACKET PIDENTIFIER RBRACKET ASSIGN expression . SEMICOLON

    SEMICOLON  przesunięcie, i przejście do stanu 99


Stan 94

   14 command: IF condition $@1 THEN commands $@2 ELSE . commands $@3 ENDIF

    $domyślnie  redukcja przy użyciu reguły 7 (commands)

    commands  przejście do stanu 100


Stan 95

   17 command: WHILE condition $@4 DO commands $@5 ENDWHILE .

    $domyślnie  redukcja przy użyciu reguły 17 (command)


Stan 96

   21 command: FOR PIDENTIFIER $@6 FROM VALUE DOWNTO VALUE . $@7 DO commands $@8 ENDFOR

    $domyślnie  redukcja przy użyciu reguły 19 ($@7)

    $@7  przejście do stanu 101


Stan 97

   25 command: FOR PIDENTIFIER $@9 FROM VALUE TO VALUE . $@10 DO commands $@11 ENDFOR

    $domyślnie  redukcja przy użyciu reguły 23 ($@10)

    $@10  przejście do stanu 102


Stan 98

    9 command: PIDENTIFIER LBRACKET NUM RBRACKET ASSIGN expression SEMICOLON .

    $domyślnie  redukcja przy użyciu reguły 9 (command)


Stan 99

    8 command: PIDENTIFIER LBRACKET PIDENTIFIER RBRACKET ASSIGN expression SEMICOLON .

    $domyślnie  redukcja przy użyciu reguły 8 (command)


Stan 100

    6 commands: commands . command
   14 command: IF condition $@1 THEN commands $@2 ELSE commands . $@3 ENDIF

    IF           przesunięcie, i przejście do stanu 10
    WHILE        przesunięcie, i przejście do stanu 11
    FOR          przesunięcie, i przejście do stanu 12
    READ         przesunięcie, i przejście do stanu 13
    WRITE        przesunięcie, i przejście do stanu 14
    SKIP         przesunięcie, i przejście do stanu 15
    PIDENTIFIER  przesunięcie, i przejście do stanu 16

    $domyślnie  redukcja przy użyciu reguły 13 ($@3)

    command  przejście do stanu 17
    $@3      przejście do stanu 103


Stan 101

   21 command: FOR PIDENTIFIER $@6 FROM VALUE DOWNTO VALUE $@7 . DO commands $@8 ENDFOR

    DO  przesunięcie, i przejście do stanu 104


Stan 102

   25 command: FOR PIDENTIFIER $@9 FROM VALUE TO VALUE $@10 . DO commands $@11 ENDFOR

    DO  przesunięcie, i przejście do stanu 105


Stan 103

   14 command: IF condition $@1 THEN commands $@2 ELSE commands $@3 . ENDIF

    ENDIF  przesunięcie, i przejście do stanu 106


Stan 104

   21 command: FOR PIDENTIFIER $@6 FROM VALUE DOWNTO VALUE $@7 DO . commands $@8 ENDFOR

    $domyślnie  redukcja przy użyciu reguły 7 (commands)

    commands  przejście do stanu 107


Stan 105

   25 command: FOR PIDENTIFIER $@9 FROM VALUE TO VALUE $@10 DO . commands $@11 ENDFOR

    $domyślnie  redukcja przy użyciu reguły 7 (commands)

    commands  przejście do stanu 108


Stan 106

   14 command: IF condition $@1 THEN commands $@2 ELSE commands $@3 ENDIF .

    $domyślnie  redukcja przy użyciu reguły 14 (command)


Stan 107

    6 commands: commands . command
   21 command: FOR PIDENTIFIER $@6 FROM VALUE DOWNTO VALUE $@7 DO commands . $@8 ENDFOR

    IF           przesunięcie, i przejście do stanu 10
    WHILE        przesunięcie, i przejście do stanu 11
    FOR          przesunięcie, i przejście do stanu 12
    READ         przesunięcie, i przejście do stanu 13
    WRITE        przesunięcie, i przejście do stanu 14
    SKIP         przesunięcie, i przejście do stanu 15
    PIDENTIFIER  przesunięcie, i przejście do stanu 16

    $domyślnie  redukcja przy użyciu reguły 20 ($@8)

    command  przejście do stanu 17
    $@8      przejście do stanu 109


Stan 108

    6 commands: commands . command
   25 command: FOR PIDENTIFIER $@9 FROM VALUE TO VALUE $@10 DO commands . $@11 ENDFOR

    IF           przesunięcie, i przejście do stanu 10
    WHILE        przesunięcie, i przejście do stanu 11
    FOR          przesunięcie, i przejście do stanu 12
    READ         przesunięcie, i przejście do stanu 13
    WRITE        przesunięcie, i przejście do stanu 14
    SKIP         przesunięcie, i przejście do stanu 15
    PIDENTIFIER  przesunięcie, i przejście do stanu 16

    $domyślnie  redukcja przy użyciu reguły 24 ($@11)

    command  przejście do stanu 17
    $@11     przejście do stanu 110


Stan 109

   21 command: FOR PIDENTIFIER $@6 FROM VALUE DOWNTO VALUE $@7 DO commands $@8 . ENDFOR

    ENDFOR  przesunięcie, i przejście do stanu 111


Stan 110

   25 command: FOR PIDENTIFIER $@9 FROM VALUE TO VALUE $@10 DO commands $@11 . ENDFOR

    ENDFOR  przesunięcie, i przejście do stanu 112


Stan 111

   21 command: FOR PIDENTIFIER $@6 FROM VALUE DOWNTO VALUE $@7 DO commands $@8 ENDFOR .

    $domyślnie  redukcja przy użyciu reguły 21 (command)


Stan 112

   25 command: FOR PIDENTIFIER $@9 FROM VALUE TO VALUE $@10 DO commands $@11 ENDFOR .

    $domyślnie  redukcja przy użyciu reguły 25 (command)
